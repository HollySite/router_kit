def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.zhangzhongyun.example"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.processResources.doFirst { pm ->
                System.out.println('optimize flutter_assets')

                File flutterAssets = new File(variant.mergeAssets.outputDir, 'flutter_assets')
                exec {
                    commandLine 'bash', '-lc', "cd ${rootProject.projectDir.parentFile.absolutePath} && " +
                            "flutter pub pub run test/optimize/assets/main.dart --platform android --assets ${flutterAssets.absolutePath}"
//                            "${flutterRoot}/bin/cache/dart-sdk/bin/dart test/optimize/assets/main.dart --platform android --assets ${flutterAssets.absolutePath}"
                }
            }
        }

        variant.assemble.doLast {
            System.out.println("flavor variant: ${variant.flavorName} - ${variant.applicationId} - ${variant.versionName}(${variant.versionCode}) - ${variant.signingConfig.name}(${variant.signingConfig.storeFile.name})")
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
